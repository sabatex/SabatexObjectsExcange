@page "/clientnode/edit/{id?}"
@attribute [Authorize]
@rendermode InteractiveWebAssembly
<SabatexEditForm TItem="Sabatex.ObjectsExchange.Models.ClientNode" TKey="Guid" Item="Item" OnBeforeSubmit="OnBeforeSubmit" IsNew="@(Id==null)">
    <Content Context="item">
        <RadzenColumn Size="12" SizeMD="8" SizeLG="10">
            <RadzenFormField Text="Name" Style="width:100%">
                <RadzenTextBox @bind-Value="item.Name" Name="Name" class="w-100" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="8" SizeLG="10">
            <RadzenFormField Text="Password" Style="width:100%">
                <RadzenPassword @bind-Value="item.Password" Name="Password" class="w-100" />
            </RadzenFormField>
        </RadzenColumn>

        <RadzenColumn Size="12" SizeMD="8" SizeLG="10">
            <RadzenFormField Text="Description" Style="width:100%">
                <RadzenTextBox @bind-Value="item.Description" Name="Description" class="w-100" />
            </RadzenFormField>
        </RadzenColumn>
        <RadzenColumn Size="12" SizeMD="8" SizeLG="10">
            <RadzenText Text="Access to node" />
            <ClientAccessSelector ClientNode="item" class="rz-my-2" />
        </RadzenColumn>
    </Content>
</SabatexEditForm>




@code {

    [Parameter]
    public string? Id { get; set; }


    Sabatex.ObjectsExchange.Models.ClientNode? Item;



    [Parameter]
    [SupplyParameterFromQueryAttribute]
    public Guid ClientId { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //await base.OnInitializedAsync();
        if (Id != null)
        {
            Item = await DataAdapter.GetByIdAsync<Sabatex.ObjectsExchange.Models.ClientNode>(Id);
        }
        else
        {
            Item = new Sabatex.ObjectsExchange.Models.ClientNode();
            Item.ClientId = ClientId;
        }


    }


    async Task OnBeforeSubmit(Sabatex.ObjectsExchange.Models.ClientNode item)
    {
         await Task.Yield();
    }


}