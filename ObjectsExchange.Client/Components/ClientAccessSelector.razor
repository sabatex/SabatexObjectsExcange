@inherits SabatexRadzenBlazorBaseDataComponent<Guid>

    <RadzenCheckBoxList Data="@avaliableNodes" @bind-Value=@values TValue="Guid" TextProperty="Name" ValueProperty="Id" class="mb-5">
        <Items>
            <RadzenCheckBoxListItem Text="Static item" Value="0" />
        </Items>
    </RadzenCheckBoxList>




@code {
    record NodeDescriptor(Guid Id,string Name);
    [Parameter] public Models.ClientNode? ClientNode { get; set; }

    private IEnumerable<Guid> values
    {
        get => ClientNode.GetClientAccess();
        set
        {
            ClientNode.SetClientAccess(value);
        }
    }

    private IEnumerable<Models.ClientNode>? avaliableNodes;
    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();
        //var queryParams = new QueryParams {Args = new LoadDataArgs {Filter = $"ClientId = {ClientNode.ClientId} && Id <> {ClientNode.Id}" } };
        var queryParams = new QueryParams { Args = new LoadDataArgs { Filter = $"ClientId eq \"{ClientNode.ClientId}\" and Id ne \"{ClientNode.Id}\"" } };
        try
        {
            var avaliableNodes = await DataAdapter.GetAsync<Models.ClientNode>(queryParams);
            this.avaliableNodes = avaliableNodes.Value;
        }
        catch(Exception ex)
        {
            NotificationService?.Notify(new NotificationMessage() { Severity = NotificationSeverity.Error, Summary = $"Помилка запису", Detail = ex.Message });

        }
        
    }
}
