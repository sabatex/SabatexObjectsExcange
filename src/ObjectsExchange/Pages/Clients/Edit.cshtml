@page
@model ObjectsExchange.Pages.Clients.EditModel

<h4>Client</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="Client.Id" />
            <div class="form-group">
                <label asp-for="Client.Dascription" class="control-label"></label>
                <input asp-for="Client.Dascription" class="form-control" />
                <span asp-validation-for="Client.Dascription" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
 
</div>
<div class="row">
    <a asp-page="Create" class="btn btn-primary">Create New</a>
</div>
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ClientNode.Id)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ClientNode.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ClientNode.Description)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ClientNode.ClientAccess)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ClientNode.IsDemo)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ClientNode.Counter)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ClientNode.MaxOperationPerMounth)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].ObjectsCount)

                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ClientNode[0].QueriesCount)

                </th>

                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.ClientNode)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientNode.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientNode.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientNode.Description)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientNode.ClientAccess)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientNode.IsDemo)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientNode.Counter)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ClientNode.MaxOperationPerMounth)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ObjectsCount)

                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.QueriesCount)

                    </td>


                    <td>
                        <a asp-page="./Edit" asp-route-id="@item.ClientNode.Id">Edit</a> |
                        <a asp-page="./Details" asp-route-id="@item.ClientNode.Id">Details</a> |
                        <a asp-page="./Delete" asp-route-id="@item.ClientNode.Id">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>


<div>
    <a asp-page="./Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
